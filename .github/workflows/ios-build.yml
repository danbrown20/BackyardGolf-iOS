name: iOS Build & Test Automation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode Version
      run: sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer
    
    - name: Show Xcode Version
      run: xcodebuild -version
    
    - name: Show Available Simulators
      run: xcrun simctl list devices
    
    - name: Clean Build Directory
      run: rm -rf ~/Library/Developer/Xcode/DerivedData
    
    # Handle different project types
    - name: Build Swift Package (if Package.swift exists)
      if: hashFiles('Package.swift') != ''
      run: |
        echo "Building Swift Package..."
        swift build
        
    - name: Test Swift Package (if Package.swift exists)
      if: hashFiles('Package.swift') != ''
      run: |
        echo "Testing Swift Package..."
        swift test
        
    - name: Build Xcode Project (if .xcodeproj exists)
      if: hashFiles('**/*.xcodeproj') != ''
      run: |
        echo "Building Xcode Project..."
        PROJECT=$(find . -name "*.xcodeproj" | head -1)
        SCHEME=$(basename "$PROJECT" .xcodeproj)
        xcodebuild \
          -project "$PROJECT" \
          -scheme "$SCHEME" \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=latest' \
          -configuration Debug \
          build
          
    - name: Test Xcode Project (if .xcodeproj exists)
      if: hashFiles('**/*.xcodeproj') != ''
      run: |
        echo "Testing Xcode Project..."
        PROJECT=$(find . -name "*.xcodeproj" | head -1)
        SCHEME=$(basename "$PROJECT" .xcodeproj)
        xcodebuild \
          -project "$PROJECT" \
          -scheme "$SCHEME" \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=latest' \
          -configuration Debug \
          test
          
    - name: Build Xcode Workspace (if .xcworkspace exists)
      if: hashFiles('**/*.xcworkspace') != ''
      run: |
        echo "Building Xcode Workspace..."
        WORKSPACE=$(find . -name "*.xcworkspace" | head -1)
        SCHEME=$(basename "$WORKSPACE" .xcworkspace)
        xcodebuild \
          -workspace "$WORKSPACE" \
          -scheme "$SCHEME" \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=latest' \
          -configuration Debug \
          build
          
    - name: Archive App (for distribution)
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Creating archive for distribution..."
        if [ -f "*.xcworkspace" ]; then
          WORKSPACE=$(find . -name "*.xcworkspace" | head -1)
          SCHEME=$(basename "$WORKSPACE" .xcworkspace)
          xcodebuild \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration Release \
            -archivePath ./BackyardGolf.xcarchive \
            archive
        elif [ -f "*.xcodeproj" ]; then
          PROJECT=$(find . -name "*.xcodeproj" | head -1)
          SCHEME=$(basename "$PROJECT" .xcodeproj)
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -configuration Release \
            -archivePath ./BackyardGolf.xcarchive \
            archive
        fi
        
    - name: Upload Build Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Logs/
          *.xcarchive/
